[{"/usr/src/crossword/frontend/src/reportWebVitals.ts":"1","/usr/src/crossword/frontend/src/App.tsx":"2","/usr/src/crossword/frontend/src/components/Square.tsx":"3","/usr/src/crossword/frontend/src/components/InputForm.tsx":"4","/usr/src/crossword/frontend/src/components/Board.tsx":"5","/usr/src/crossword/frontend/src/components/Game.tsx":"6","/usr/src/crossword/frontend/src/index.tsx":"7"},{"size":425,"mtime":1610783072491,"results":"8","hashOfConfig":"9"},{"size":1116,"mtime":1611230211766,"results":"10","hashOfConfig":"9"},{"size":444,"mtime":1612541126409,"results":"11","hashOfConfig":"9"},{"size":446,"mtime":1612443312229,"results":"12","hashOfConfig":"9"},{"size":3578,"mtime":1612540885447,"results":"13","hashOfConfig":"9"},{"size":11116,"mtime":1612578921137,"results":"14","hashOfConfig":"9"},{"size":539,"mtime":1612540597477,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t97x07",{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/usr/src/crossword/frontend/src/reportWebVitals.ts",[],"/usr/src/crossword/frontend/src/App.tsx",["32","33","34","35","36"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Navbar from './components/Navbar'\nimport MyAvatar from './components/MyAvatar'\nimport About from './components/About'\nimport Skills from './components/Skills'\nimport Board from './components/Board';\nimport { InputForm } from './components/InputForm';\n\nfunction App() {\n    const [content, setContent] = useState<string>(\"test\");\n\n    const onChangeContent = useCallback(\n      (event: React.ChangeEvent<HTMLInputElement>) => {\n        setContent(event.target.value);\n      },\n      []\n    );\n  \n    useEffect(() => {\n      console.log(\"content „ÅåÂ§âÊõ¥„Åï„Çå„Åü\");\n    }, [content]);\n\n  return (\n    <>\n    {/* <section>\n      <Navbar />\n    </section> */}\n    {/* <section>\n      <MyAvatar />\n    </section> */}\n      <Board content={content}/>\n    {/* <section id='skills'>\n      <Skills />\n    </section> */}\n      <InputForm content={content} onChange={onChangeContent} />\n      <div>\n        <span>content „ÅÆÂÄ§„ÅØ„ÄÅ\"{content}\"</span>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","/usr/src/crossword/frontend/src/components/Square.tsx",[],"/usr/src/crossword/frontend/src/components/InputForm.tsx",["37"],"/usr/src/crossword/frontend/src/components/Board.tsx",[],"/usr/src/crossword/frontend/src/components/Game.tsx",["38","39","40"],"import { Grid } from '@material-ui/core';\nimport { ColorLensOutlined } from '@material-ui/icons';\nimport React, {FC, useCallback, useEffect, useState} from 'react';\nimport Board from './Board';\nimport { InputForm } from './InputForm';\nimport { SquareValue } from './Square';\n\nconst Game :FC = () => {\n\n    const V_PROBLEMS = [\n        {\n            'problem':'„ÄêÔºë„ÄëÂ§©ÁÑ∂Áü≥„ÇÑÁâõ„ÅÆËßí„Åã„Çâ„Åß„Åç„Åü„Éó„É¨„Éº„Éà„ÅßËÇå„ÇíÊì¶„Çä„ÄÅÂúß„Çí„Åã„Åë„Å¶Ë°ÄÊ∂≤„ÇÑ„É™„É≥„Éë„ÅÆÊµÅ„Çå„ÇíËâØ„Åè„Åô„ÇãÁæéÂÆπÊ≥ï',\n            'answer':'„Ç´„ÉÉ„Çµ',\n            'xy':{x:0, y:0},\n            'direction':'v'\n        },\n        {\n            'problem':'„ÄêÔºí„ÄëËÇâÁêÉ',\n            'answer':'„Éü„Éº„Éà„Éú„Éº„É´',\n            'xy':{x:1, y:0},\n            'direction':'v'\n        },\n        {\n            'problem':'„ÄêÔºì„Äë„Éà„Éº„Éû„Çπ„Éª„Äá„Äá„ÄÅ„Éû„ÉÉ„Çµ„Äá„Äá„Ç´„É¨„Éº',\n            'answer':'„Éû„É≥',\n            'xy':{x:3, y:0},\n            'direction':'v'\n        },\n        {\n            'problem':'„ÄêÔºíÔºê„ÄëËç∑Êú≠„ÄÅ‰ªòÁÆã',\n            'answer':'„Çø„Ç∞',\n            'xy':{x:4, y:0},\n            'direction':'v'\n        },\n        {\n            'problem':'„ÄêÔºñ„ÄëÂè£„ÅÆÁ´Ø„Å´„Å§„ÅÑ„Å¶„Åü„Çä„Åô„Çã',\n            'answer':'„É°„Ç∑„ÉÑ„Éñ',\n            'xy':{x:6, y:0},\n            'direction':'v'\n        },\n        {\n            'problem':'„ÄêÔºó„ÄëÂ∞æ',\n            'answer':'„Ç∑„ÉÉ„Éù',\n            'xy':{x:7, y:0},\n            'direction':'v'\n        },\n        {\n            'problem':'„ÄêÔºíÔºë„Äë„Ç≠„É£„ÉÉ„ÉÅ„Éª„Ç¢„É≥„Éâ„Éª„Äá„Äá„Äá„Äá',\n            'answer':'„É™„É™„Éº„Çπ',\n            'xy':{x:2, y:1},\n            'direction':'v'\n        },\n        {\n            'problem':'„ÄêÔºô„ÄëÁ´πÂÆÆ„ÇÜ„ÇÜ„ÅìÂéü‰Ωú„É©„Éé„Éô„ÄÅ„Ç¢„Éã„É°Âåñ„ÇÇ„Åó„Åü„ÄÅ„É©„Éñ„Ç≥„É°',\n            'answer':'„Éà„É©„Éâ„É©',\n            'xy':{x:5, y:2},\n            'direction':'v'\n        },\n        {\n            'problem':'„ÄêÔºíÔºí„Äë„Äå„Åì„ÅÆ‰∫∫„ÅÆÊâã„ÇíÈõ¢„Åï„Å™„ÅÑ„ÄÇÂÉï„ÅÆÈ≠Ç„Åî„Å®Èõ¢„Åó„Å¶„Åó„Åæ„ÅÜÊ∞ó„Åå„Åô„Çã„Åã„Çâ„Äç',\n            'answer':'„Ç§„Ç≥',\n            'xy':{x:3, y:3},\n            'direction':'v'\n        },\n        {\n            'problem':'„ÄêÔºëÔºï„Äë„Ç¶„Çµ„ÇÆË≠¶ÂØüÂÆò„Å®„Ç≠„ÉÑ„ÉçË©êÊ¨∫Â∏´„Åå„Åß„Å¶„Åè„ÇãÊò†Áîª',\n            'answer':'„Ç∫„Éº„Éà„Éî„Ç¢',\n            'xy':{x:4, y:3},\n            'direction':'v'\n        },\n        {\n            'problem':'„ÄêÔºëÔºë„ÄëÂ•≥Â£∞„ÅÆÈ´ò„ÅÑÈü≥Âüü„ÇíÊåá„Åó„Åæ„Åô',\n            'answer':'„ÇΩ„Éó„É©„Éé',\n            'xy':{x:0, y:4},\n            'direction':'v'\n        },\n        {\n            'problem':'„ÄêÔºëÔºí„Äë„Å§„Çì„Åå„Åª„Åó„ÅÑÊ•ΩÂô®',\n            'answer':'„Éï„É´„Éº„Éà',\n            'xy':{x:7, y:4},\n            'direction':'v'\n        },\n        {\n            'problem':'„ÄêÔºëÔºô„Äë„Åä„Å™„Åã„ÄÄ„Äá„Äá„Äá„ÉÄ„É≥„Çπ„Å®„Åã„ÅÑ„ÅÜ',\n            'answer':'„Éô„É™„Éº',\n            'xy':{x:6, y:5},\n            'direction':'v'\n        },\n        {\n            'problem':'„ÄêÔºëÔºñ„ÄëÂπ≥Âíå„ÅÆË±°Âæ¥Ôºü',\n            'answer':'„Éè„Éà',\n            'xy':{x:2, y:6},\n            'direction':'v'\n        },\n    ]\n\n    const H_PROBLEMS = [\n        {\n            'problem':'„ÄêÔºë„ÄëÂÖ´Áôæ‰∏á„ÅÑ„Çã„ÇÑ„Å§',\n            'answer':'„Ç´„Éü',\n            'xy':{x:0, y:0},\n            'direction':'h'\n        },\n        {\n            'problem':'„ÄêÔºí„ÄëÂ±±„ÅÆ„Éõ„ÉÜ„É´„ÅßÈ£ü„Åõ„Åæ„Åô',\n            'answer':'„Éû„Çø„ÇÆ„É°„Ç∑',\n            'xy':{x:3, y:0},\n            'direction':'h'\n        },\n        {\n            'problem':'„ÄêÔºî„ÄëËªä„ÄÅ„Éê„Ç§„ÇØ„ÄÅËá™Ëª¢Ëªä„Å´ÂÖ±ÈÄö„Åó„Åæ„Åô',\n            'answer':'„ÉÑ„Éº„É™„É≥„Ç∞',\n            'xy':{x:0, y:1},\n            'direction':'h'\n        },\n        {\n            'problem':'„ÄêÔºï„ÄëÈáè„Çà„Çä„Äá„Äá',\n            'answer':'„Ç∑„ÉÑ',\n            'xy':{x:6, y:1},\n            'direction':'h'\n        },\n        {\n            'problem':'„ÄêÔºò„ÄëÈáàËø¶Ôºü„Å®„Åã„Éñ„ÉÉ„ÉÄÔºü„ÅåÂæóÊÑè„Å™„ÇÑ„Å§',\n            'answer':'„Çµ„Éà„É™',\n            'xy':{x:0, y:2},\n            'direction':'h'\n        },\n        {\n            'problem':'„ÄêÔºô„Äë„Éó„É¨„ÉÉ„ÉÑ„Çß„É´„ÅÆ„Éë„Ç§„Éó„ÅÆ‰∏≠„Å´„ÉÅ„Éß„Ç≥„ÅåË©∞„ÇÅ„Çâ„Çå„Åü„ÇÑ„Å§',\n            'answer':'„Éà„ÉÉ„Éù',\n            'xy':{x:5, y:2},\n            'direction':'h'\n        },\n        {\n            'problem':'„ÄêÔºëÔºê„Äë(‚îå^o^)‚îê',\n            'answer':'„Éú„Éº„Ç§„Ç∫„É©„Éñ',\n            'xy':{x:1, y:3},\n            'direction':'h'\n        },\n        {\n            'problem':'„ÄêÔºëÔºë„Äë„Çπ„Éë„Ç≤„ÉÉ„ÉÜ„Ç£„Å®Ë°®Áèæ„Åï„Çå„Åü„Çä„Åô„Çã',\n            'answer':'„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ',\n            'xy':{x:0, y:4},\n            'direction':'h'\n        },\n        {\n            'problem':'„ÄêÔºëÔºí„Äë„Ç∞„É´„ÉÜ„É≥„Çí‰∏ª„Å™ÂéüÊñô„Å®„Åó„ÅüÂä†Â∑•È£üÂìÅ',\n            'answer':'„Éï',\n            'xy':{x:7, y:4},\n            'direction':'h'\n        },\n        {\n            'problem':'„ÄêÔºëÔºì„Äë„ÄåÊäº„Åô„Äç„ÅÆÂØæÁæ©Ë™û',\n            'answer':'„Éó„É´',\n            'xy':{x:0, y:5},\n            'direction':'h'\n        },\n        {\n            'problem':'„ÄêÔºëÔºî„ÄëüêØÔºãüîî',\n            'answer':'„Éà„É©„Éô„É´',\n            'xy':{x:4, y:5},\n            'direction':'h'\n        },\n        {\n            'problem':'„ÄêÔºëÔºñ„Äë„ÅäÁ•≠„Çä„Å´„ÅØÂøÖÈ†à',\n            'answer':'„Éè„ÉÉ„Éî',\n            'xy':{x:2, y:6},\n            'direction':'h'\n        },\n        {\n            'problem':\"„ÄêÔºëÔºô„ÄëEDWIN„ÄÅLEVI'S„Å®„Åç„Åü„Çâ\",\n            'answer':'„É™„Éº',\n            'xy':{x:6, y:6},\n            'direction':'h'\n        },\n        {\n            'problem':'„ÄêÔºëÔºó„Äë„ÇØ„É™„Ç®„Ç§„Çø„Éº„ÅåÊñáÁ´†„ÇÑ„Éû„É≥„Ç¨„ÄÅÂÜôÁúü„ÄÅÈü≥Â£∞„ÇíÊäïÁ®ø„Åô„Çã„Åì„Å®„Åå„Åß„Åç„ÄÅ„É¶„Éº„Ç∂„Éº„ÅØ„Åù„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÊ•Ω„Åó„Çì„ÅßÂøúÊè¥„Åß„Åç„Çã„É°„Éá„Ç£„Ç¢„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†',\n            'answer':'„Éé„Éº„Éà',\n            'xy':{x:0, y:7},\n            'direction':'h'\n        },\n        {\n            'problem':'„ÄêÔºëÔºò„ÄëÂºè„ÇÑÂÄ§„ÅåÊÉ≥ÂÆö„Åó„Åü„ÇÇ„ÅÆ„Å´„Å™„Å£„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç„Åô„Çã„Å®„Åç„ÇÑ„ÄÅ„ÉÜ„Çπ„Éà„Ç≥„Éº„Éâ„ÇíÊõ∏„ÅÑ„Å¶„ÅÑ„Çã„Å®„Åç„Å´„Å§„Åã„ÅÜ',\n            'answer':'„Ç¢„Çµ„Éº„Éà',\n            'xy':{x:4, y:7},\n            'direction':'h'\n        },\n    ]\n\n    const getInitSquares = () => {\n        return [\n            ['','',undefined,'','','','',''],\n            ['','','','','',undefined,'',''],\n            ['','','',undefined,undefined,'','',''],\n            [undefined,'','','','','','',undefined],\n            ['','','','','','',undefined,''],\n            ['','',undefined,undefined,'','','',''],\n            ['',undefined,'','','',undefined,'',''],\n            ['','','',undefined,'','','',''],\n        ]\n    }\n\n    const [current, setCurrent] = useState<SquareValue[][]>(getInitSquares())\n    const [isFinish, setFinish] = useState<boolean>(false);\n\n    const hiraToKana = (str:string) => {\n        return str.replace(/[\\u3041-\\u3096]/g, function(match) {\n            var chr = match.charCodeAt(0) + 0x60;\n            return String.fromCharCode(chr);\n        });\n    }\n\n\n    // input„ÅÆÂÄ§„Çícontent„Å´„Çª„ÉÉ„Éà„Åô„Çã\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>, direction:string, x:number, y:number, length:number) => {\n        if (isFinish) return;\n        \n        let val = [...event.target.value];\n        let cur = [...current];\n\n        if (direction === 'h') {\n            let wk = current[y].slice(0);\n            for (let i = 0; i < length; i++) {\n                if (val[i] === undefined) {\n                    wk[x] = null;\n                } else {\n                    wk[x] = hiraToKana(val[i]);\n                    wk[x] = wk[x] === '„ÉÉ' ? '„ÉÑ' : wk[x];\n                }\n                x++;\n            }\n            cur[y] = wk;\n            \n        } else {\n            for (let i = 0; i < length; i++) {\n                let wk = current[y].slice(0);\n                if (val[i] === undefined) {\n                    wk[x] = null;\n                } else {\n                    wk[x] = hiraToKana(val[i]);\n                    wk[x] = wk[x] === '„ÉÉ' ? '„ÉÑ' : wk[x];\n                }\n                cur[y] = wk;\n                y++;\n            }\n        }\n        setCurrent(cur);\n    }\n\n    useEffect(() => {\n        let val = [\n            ['„Ç´','„Éü',undefined,'„Éû','„Çø','„ÇÆ','„É°','„Ç∑'],\n            ['„ÉÑ','„Éº','„É™','„É≥','„Ç∞',undefined,'„Ç∑','„ÉÑ'],\n            ['„Çµ','„Éà','„É™',undefined,undefined,'„Éà','„ÉÑ','„Éù'],\n            [undefined,'„Éú','„Éº','„Ç§','„Ç∫','„É©','„Éñ',undefined],\n            ['„ÇΩ','„Éº','„Çπ','„Ç≥','„Éº','„Éâ',undefined,'„Éï'],\n            ['„Éó','„É´',undefined,undefined,'„Éà','„É©','„Éô','„É´'],\n            ['„É©',undefined,'„Éè','„ÉÑ','„Éî',undefined,'„É™','„Éº'],\n            ['„Éé','„Éº','„Éà',undefined,'„Ç¢','„Çµ','„Éº','„Éà'],\n        ]\n        if (JSON.stringify(val) === JSON.stringify(current)) {\n            setFinish(true);\n        }\n    }, [current])\n\n    // const [state, setState] = useState({\n    //     history: [\n    //         {\n    //           squares: Array(9).fill(null)\n    //         }\n    //     ],\n    //     stepNumber: 0,\n    //     xIsNext: true\n    // });\n\n\n    // useEffect(() => {\n    //     setCurrent(state.history[state.stepNumber].squares);\n    // }, [state])\n\n    return (\n    <div className=\"game\">\n        <Grid container spacing={1}>\n            <Grid item xs={6}>\n                <div className=\"game-board\">\n                <Board\n                    squares={current}\n                    finish={isFinish}\n                />\n                </div>\n            </Grid>\n            <Grid item xs={6}>\n                \n                <img src={require('../hbd.png').default} style={{width:300}} />\n            </Grid>\n        </Grid>\n        <div className=\"game-info\">\n            <>\n            <Grid container spacing={1}>\n                <Grid item xs={6}>\n                    <span>„Åü„Å¶„ÅÆ„ÇÇ„Çì„Å†„ÅÑ</span>\n                    {V_PROBLEMS.map((item) =>(\n                        <Grid container spacing={1}>\n                            <Grid item xs={8}>\n                                <span>{item.problem}</span>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <InputForm onChange={(e) => handleInputChange(e, item.direction, item.xy.x, item.xy.y, item.answer.length)} length={item.answer.length} />\n                            </Grid>\n                        </Grid>\n                    ))}\n                </Grid>\n                <Grid item xs={6}>\n                    <span>„Çà„Åì„ÅÆ„ÇÇ„Çì„Å†„ÅÑ</span>\n                    {H_PROBLEMS.map((item) =>(\n                        <Grid container spacing={1}>\n                            <Grid item xs={8}>\n                                <span>{item.problem}</span>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <InputForm onChange={(e) => handleInputChange(e, item.direction, item.xy.x, item.xy.y, item.answer.length)} length={item.answer.length} />\n                            </Grid>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grid>\n\n\n\n\n\n            </>\n        </div>\n    </div>\n    );\n}\n\nexport default Game;","/usr/src/crossword/frontend/src/index.tsx",["41"],{"ruleId":"42","severity":1,"message":"43","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":12},{"ruleId":"42","severity":1,"message":"46","line":5,"column":8,"nodeType":"44","messageId":"45","endLine":5,"endColumn":14},{"ruleId":"42","severity":1,"message":"47","line":6,"column":8,"nodeType":"44","messageId":"45","endLine":6,"endColumn":16},{"ruleId":"42","severity":1,"message":"48","line":7,"column":8,"nodeType":"44","messageId":"45","endLine":7,"endColumn":13},{"ruleId":"42","severity":1,"message":"49","line":8,"column":8,"nodeType":"44","messageId":"45","endLine":8,"endColumn":14},{"ruleId":"42","severity":1,"message":"50","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"42","severity":1,"message":"51","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":27},{"ruleId":"42","severity":1,"message":"52","line":3,"column":20,"nodeType":"44","messageId":"45","endLine":3,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":294,"column":17,"nodeType":"55","endLine":294,"endColumn":80},{"ruleId":"42","severity":1,"message":"56","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":11},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'MyAvatar' is defined but never used.","'About' is defined but never used.","'Skills' is defined but never used.","'TextField' is defined but never used.","'ColorLensOutlined' is defined but never used.","'useCallback' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'App' is defined but never used."]